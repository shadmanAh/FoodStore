{"ast":null,"code":"import { sample_foods, sample_tags } from './../../data';\nimport * as i0 from \"@angular/core\";\nexport class FoodService {\n  constructor() {}\n  getAll() {\n    return sample_foods;\n  }\n  getAllFoodsBySearchTerm(searchTerm) {\n    return this.getAll().filter(food => food.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  getAllTags() {\n    return sample_tags;\n  }\n  getAllFoodByTag(tag) {\n    return tag === \"All\" ? this.getAll() : this.getAll().filter(food => food.tage.inincludes(tag));\n  }\n}\nFoodService.ɵfac = function FoodService_Factory(t) {\n  return new (t || FoodService)();\n};\nFoodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodService,\n  factory: FoodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,cAAc;;AAQxD,OAAM,MAAOC,WAAW;EAEtBC,eAAgB;EAEhBC,MAAM;IACJ,OAAOJ,YAAY;EACrB;EAEAK,uBAAuB,CAACC,UAAiB;IACvC,OAAO,IAAI,CAACF,MAAM,EAAE,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,EAAE,CAAC,CAAC;EACjG;EAEAE,UAAU;IACR,OAAOX,WAAW;EACpB;EAEAY,eAAe,CAACC,GAAU;IACxB,OAAOA,GAAG,KAAK,KAAK,GACpB,IAAI,CAACV,MAAM,EAAE,GACb,IAAI,CAACA,MAAM,EAAE,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACO,IAAI,CAACC,UAAU,CAACF,GAAG,CAAC,CAAC;EACzD;;AApBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["sample_foods","sample_tags","FoodService","constructor","getAll","getAllFoodsBySearchTerm","searchTerm","filter","food","name","toLowerCase","includes","getAllTags","getAllFoodByTag","tag","tage","inincludes","factory","providedIn"],"sourceRoot":"","sources":["E:\\angular_projects\\foodStore\\Frontend\\src\\app\\services\\food.service.ts"],"sourcesContent":["import { sample_foods, sample_tags } from './../../data';\nimport { Injectable } from '@angular/core';\nimport { Food } from '../shared/models/Foods';\nimport { Tag } from '../shared/models/Tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor() { }\n\n  getAll():Food[]{\n    return sample_foods;\n  }\n\n  getAllFoodsBySearchTerm(searchTerm:string){\n    return this.getAll().filter(food => food.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n\n  getAllTags():Tag[]{\n    return sample_tags;\n  }\n\n  getAllFoodByTag(tag:string):Food[]{\n    return tag === \"All\"?\n    this.getAll():\n    this.getAll().filter(food => food.tage.inincludes(tag));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}